% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/from_forresdat_to_access.R
\name{from_forresdat_to_access}
\alias{from_forresdat_to_access}
\title{copy table(s) from git repository \code{forresdat} to access database}
\usage{
from_forresdat_to_access(
  tables,
  database,
  remove_tables = FALSE,
  plottype = NA,
  join_plotinfo = TRUE
)
}
\arguments{
\item{tables}{vector with table names of tables that should be moved}

\item{database}{name of (empty) Access database including path in which
results should be saved}

\item{remove_tables}{overwrite existing tables in database?  Default is
FALSE, which means tables are not overwritten/deleted unless this parameter
is explicitly put on TRUE.}

\item{plottype}{possibility to select only data for a certain plot type, e.g.
'CP' for Circular plot or 'CA' for Core area
(the default NA means that data from all plots are retrieved)}

\item{join_plotinfo}{should table \code{plotinfo} be joined to the chosen table to
add columns \code{forest_reserve}, \code{survey_dendro}/\code{deadw}/\code{reg}/\code{veg} (TRUE or
FALSE) and \code{data_processed} (TRUE or FALSE)?
Default is TRUE.
(This is only possible if the given table contains a column plot_id,
so this parameter should be put FALSE if this column is absent.)
Must be FALSE if you want to load the table \code{plotinfo} itself.}
}
\value{
No value is returned, the tables are saved in the access database.
}
\description{
This function loads one or more tables from git repository \code{forresdat}
and saves them in an Access (or SQLite) database.
}
\examples{
library(forrescalc)
# (add path to your own database here)
path_to_database <- "my-db.sqlite"
from_forresdat_to_access(
  tables = "dendro_by_plot",
  database = path_to_database
)
# if tables don't contain column plot_id, or it is not relevant to add
# information on the plots, add argument join_plotinfo = FALSE
from_forresdat_to_access(
  tables = c("qalive_dead", "qdecaystage"),
  database = path_to_database,
  join_plotinfo = FALSE
)

file.remove("my-db.sqlite")

}
